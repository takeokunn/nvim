#+TITLE: Configurations for Neovim
#+AUTHOR: takeokunn
#+EMAIL: bararararatty@gmail.com
#+STARTUP: content
#+STARTUP: fold
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>
#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>
* はじめに
** 基本情報

- repo: [[http://github.com/takeokunn/nvim-config][takeokunn/nvim-config]]
- twitter: [[https://twitter.com/takeokunn][たけてぃ@takeokunn]]
- blog: [[https://takeokunn.org][https://takeokunn.org]]

* Initialize
** Basic
*** compatible
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  if &compatible
    set nocompatible
  endif
#+end_src
*** encoding
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  set encoding=utf-8
  set fileencodings=utf-8,euc-jp,cp932
#+end_src
*** syntax
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  syntax on
#+end_src
*** clipboard
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  set clipboard+=unnamed
#+end_src
*** line number
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  set number relativenumber
#+end_src
*** indent
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  set backspace=2
  set tabstop=2
  set shiftwidth=2
#+end_src
*** status
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  set laststatus=2
  set statusline=%y
#+end_src
*** split window
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  set title
  set splitbelow
  set splitright
#+end_src
*** util
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  set showmatch
  set wrapscan
  set hlsearch
  set showcmd
  set cursorline
  set nofoldenable
  set noswapfile
  set expandtab
  set incsearch
  set ignorecase
  set smartcase
#+end_src
*** filetype
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  filetype plugin indent on
#+end_src
*** highlight
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  highlight clear CursorLine

  highlight Normal ctermbg=none
  highlight NonText ctermbg=none
  highlight LineNr ctermbg=none
  highlight Folded ctermbg=none
  highlight EndOfBuffer ctermbg=none
#+end_src
** Keymap
*** mapleader
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  let mapleader = ','
#+end_src
*** basic
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  nmap / /\v

  vnoremap < <gv
  vnoremap > >gv

  inoremap jh <Esc>
  nnoremap <Leader>p "+p
  nmap <Esc><Esc> :nohlsearch<CR><Esc>

  nnoremap <silent> <c-j> 10gj
  nnoremap <silent> <c-k> 10gk
  nnoremap <silent><expr> * v:count ? '*' : ':sil exe "keepj norm! *" <Bar> call winrestview(' . string(winsaveview()) . ')<CR>'
#+end_src
*** window
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  nnoremap sj <C-w>j
  nnoremap sk <C-w>k
  nnoremap sl <C-w>l
  nnoremap sh <C-w>h
  nnoremap sJ <C-w>J
  nnoremap sK <C-w>K
  nnoremap sL <C-w>L
  nnoremap sH <C-w>H
  nnoremap sw <C-w>w
#+end_src
*** buffer
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  nnoremap <silent> sp :<C-u>bp<CR>
  nnoremap <silent> sn :<C-u>bn<CR>
#+end_src
** Dein
*** setup
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  let $CACHE = expand('~/.cache')

  if !($CACHE->isdirectory())
    call mkdir($CACHE, 'p')
  endif

  if &runtimepath !~# '/dein.vim'
    let s:dein_dir = 'dein.vim'->fnamemodify(':p')

    if !(s:dein_dir->isdirectory())
      let s:dein_dir = $CACHE .. '/dein/repos/github.com/Shougo/dein.vim'
      if !(s:dein_dir->isdirectory())
        execute '!git clone https://github.com/Shougo/dein.vim' s:dein_dir
      endif
    endif

    execute 'set runtimepath^=' .. s:dein_dir->fnamemodify(':p')->substitute('[/\\]$', '', '')
  endif
#+end_src
*** config
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  let s:dein_dir = expand('~/.cache/dein')
  let g:rc_dir = expand('~/.config/nvim')

  if dein#load_state(s:dein_dir)
    call dein#begin(s:dein_dir)

    let s:toml = g:rc_dir . '/dein.toml'
    let s:lazy_toml = g:rc_dir . '/dein_lazy.toml'

    call dein#load_toml(s:toml, {'lazy': 0})
    call dein#load_toml(s:lazy_toml, {'lazy': 1})

    call dein#end()
    call dein#save_state()
  endif
#+end_src
*** install
#+begin_src vimrc :tangle (expand-file-name "~/.config/nvim/init.vim") :mkdirp yes :noweb yes
  if dein#check_install()
    call dein#install()
  endif
#+end_src
* Plugins
** Bootstrap
*** denops

| repo                  | descripion                                                                   |
|-----------------------+------------------------------------------------------------------------------|
| [[https://github.com/vim-denops/denops.vim][vim-denops/denops.vim]] | An ecosystem of Vim/Neovim which allows developers to write plugins in Deno. |

#+begin_src toml :tangle (expand-file-name "~/.config/nvim/dein.toml") :mkdirp yes :noweb yes
  [[plugins]]
  repo = "vim-denops/denops.vim"
#+end_src
*** denops-hello

| repo                             | descripion                     |
|----------------------------------+--------------------------------|
| [[https://github.com/vim-denops/denops-helloworld.vim][vim-denops/denops-helloworld.vim]] | Example plugins of denops.vim. |

#+begin_src toml :tangle (expand-file-name "~/.config/nvim/dein.toml") :mkdirp yes :noweb yes
  [[plugins]]
  repo = "vim-denops/denops-helloworld.vim"
#+end_src
** Lazy
*** Joke
**** vim-sl

| repo         | descripion |
|--------------+------------|
| [[https://github.com/mattn/vim-sl][mattn/vim-sl]] | sl command |

Run =call sl#animate()= .

#+begin_src toml :tangle (expand-file-name "~/.config/nvim/dein_lazy.toml") :mkdirp yes :noweb yes
  [[plugins]]
  repo = "mattn/vim-sl"
#+end_src
**** vim-redacted

| repo               | descripion                    |
|--------------------+-------------------------------|
| [[https://github.com/dbmrq/vim-redacted][dbmrq/vim-redacted]] | The best way to ████ the ████ |

#+begin_src toml :tangle (expand-file-name "~/.config/nvim/dein_lazy.toml") :mkdirp yes :noweb yes
  [[plugins]]
  repo = "dbmrq/vim-redacted"
#+end_src
*** Cursor
**** vim-easymotion

| repo                      | descripion                                                         |
|---------------------------+--------------------------------------------------------------------|
| [[https://github.com/easymotion/vim-easymotion][easymotion/vim-easymotion]] | EasyMotion provides a much simpler way to use some motions in vim. |

#+begin_src toml :tangle (expand-file-name "~/.config/nvim/dein_lazy.toml") :mkdirp yes :noweb yes
  [[plugins]]
  repo = 'easymotion/vim-easymotion'
  hook_source = '''
  let g:EasyMotion_smartcase = 1
  '''
#+end_src
